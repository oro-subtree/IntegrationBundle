{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}

{% set entity = form.vars.value %}
{% if entity.id %}
    {% oro_title_set({params : {"%channel.name%": entity.name } }) %}
{% endif %}
{% set formAction = entity.id ? path('oro_integration_channel_update', { id: entity.id }) : path('oro_integration_channel_create') %}

{% block navButtons %}
    {% if entity.id and resource_granted('oro_integration_channel_delete') %}
        {{
            UI.deleteButton({
                'dataUrl': path('oro_api_delete_channel', {'id': entity.id}),
                'dataRedirect': path('oro_integration_channel_index'),
                'aCss': 'no-hash remove-button',
                'id': 'btn-remove-channel',
                'dataId': entity.id,
                'dataMessage': 'Are you sure you want to delete this channel?'|trans,
                'successMessage': 'Channel deleted'|trans,
                'title': 'Delete Channel',
                'label': 'Delete'
            })
        }}
        {{ UI.buttonSeparator() }}
    {% endif %}
    {{ UI.button({'path' : path('oro_integration_channel_index'), 'title' : 'Cancel', 'label' : 'Cancel'}) }}
    {{ UI.saveAndStayButton('oro_integration_channel_update') }}
    {{ UI.buttonType({'type': 'button', 'class': 'btn-success', 'label': 'Save and Close', 'action': 'save'}) }}

{% endblock navButtons %}

{% block pageHeader %}
    {% set title = 'Create Channel'|trans %}
    {% if entity.id %}
        {% set breadcrumbs = {
            'entity':      entity,
            'indexPath':   path('oro_integration_channel_index'),
            'indexLabel': 'Channel',
            'entityTitle': entity.name|default('N/A')
            }
        %}
        {{ parent() }}
    {% else %}
        {% include 'OroUIBundle::page_title_block.html.twig' %}
    {% endif %}
{% endblock pageHeader %}

{% block stats %}{% endblock %}

{% block content_data %}
    {{ JSFV(form) }}

    <style type="text/css">
        .row-fluid > .channel-update-wrapper {
            margin: 0 0 10px 0;
            padding-left: 13px;
        }
        #channel-update-widget {
            padding-top: 20px;
        }
    </style>
    <div class="contact-info-col-set well-small dark-bg">
        <div class="row-fluid well-small-bottom clearfix">
            <div class="span12 channel-update-wrapper">
                <div class="form-container" id="channel-update-widget">
                    {% set formErrors = form_errors(form)? form_errors(form) : null %}
                    {% if formErrors is defined and formErrors | length %}
                        <div class="customer-info-actions container-fluid well-small alert-wrap">
                            <div class="alert alert-error">
                                <button class="close" type="button" data-dismiss="alert" data-target=".alert-wrap">Ã—
                                </button>
                                {{ formErrors|raw }}
                            </div>
                        </div>
                    {% endif %}

                    <form id="{{ form.vars.name }}" action="{{ formAction }}" {{ form_enctype(form) }}
                          method="post" data-collect="true" class="scrollable-substructure">
                        <fieldset class="form-horizontal">
                            {{ form_widget(form) }}
                            <input type="hidden" name="input_action" value="" data-form-id="{{ form.vars.name }}"/>
                        </fieldset>
                    </form>
                </div>
            </div>
            <script type="text/javascript">
                require(['oro/widget-manager', 'oro/block-widget'],
                function(widgetManager, BlockWidget) {
                    var widgetInstance = new BlockWidget({
                        el: '#channel-update-widget',
                        title: {{ 'General Information'|trans|json_encode|raw }}
                    });
                    widgetInstance.render();
                });
            </script>
        </div>
        {% if entity.id %}
            {{ _self.renderAdditionalData(entity) }}
        {% endif %}
    </div>
{% endblock content_data %}

{% macro renderAdditionalData(entity) %}
    <div class="row-fluid well-small-bottom clearfix">
        <div class="span6 contact-info-col">
            {{
                oro_widget_render({
                    'widgetType': 'block',
                    'url': path('oro_integration_transport_list', { id: entity.id }),
                    'title': 'Transports',
                    'alias': 'transport_list'
                })
            }}
            <script type="text/html" id="add-transport-link-template">
                <a href="{{ path('oro_integration_transport_prepare', { channelType: entity.type, channelId: entity.id }) }}" class="btn btn-small no-hash">
                    <i class="icon-plus"></i>
                    {{ 'Add transport'|trans }}
                </a>
            </script>
            {{ _self.renderWidgetJS('transport') }}
        </div>
        <div class="span6 contact-info-col">
            {{
                oro_widget_render({
                    'widgetType': 'block',
                    'url': path('oro_integration_connector_list', { id: entity.id }),
                    'title': 'Connectors',
                    'alias': 'connector_list'
                })
            }}
            <script type="text/html" id="add-connector-link-template">
                <a href="{{ path('oro_integration_connector_prepare', { id: entity.id }) }}" class="btn btn-small no-hash">
                    <i class="icon-plus"></i>
                    {{ 'Add connector'|trans }}
                </a>
            </script>
            {{ _self.renderWidgetJS('connector') }}
        </div>
    </div>
{% endmacro %}

{% macro renderWidgetJS(type) %}
    <script type="text/javascript">
        require(['jquery', 'oro/widget-manager', 'oro/dialog-widget', 'oro/delete-confirmation', 'oro/navigation', 'oro/messenger'],
        function ($, widgetManager, DialogWidget, DeleteConfirmation, Navigation, messenger) {

            var clickHandler = function (e) {
                e.preventDefault();

                var url = $(e.currentTarget).attr('href');

                new DialogWidget({
                    url: url,
                    title: {{ ('Add ' ~ type)|trans|json_encode|raw }},
                    stateEnabled: false,
                    incrementalPosition: false,
                    dialogOptions: {
                        modal: true,
                        resizable: false,
                        width: 475,
                        autoResize: true
                    }
                }).render();
            },
            widgetCreateHandler = function (widget) {
                var viewLink = $($('#add-{{ type }}-link-template').html());
                widget.addAction('add', 'default', viewLink);
                // @TODO fix BAP-2363
                viewLink.on('click', clickHandler);
            };

            widgetManager.getWidgetInstanceByAlias('{{ type }}_list', function (widget) {
                widgetCreateHandler(widget);

                widget.on('renderComplete', function($el) {
                    // @TODO remove this after BAP-2371
                    widgetCreateHandler(widget);

                    $el.find('a.update-{{ type }}-link').on('click', clickHandler);
                    $el.find('a.delete-{{ type }}-link').on('click', function () {
                        var confirm,
                            el = $(this),
                            message = el.data('message');

                        confirm = new DeleteConfirmation({content: message});
                        confirm.on('ok', function () {
                            var navigation = Navigation.getInstance();
                            if (navigation) {
                                navigation.loadingMask.show();
                            }

                            $.ajax({
                                url: el.attr('href'),
                                type: 'DELETE',
                                success: function (data) {
                                    if (navigation) {
                                        navigation.loadingMask.hide();
                                    }
                                    el.trigger('removesuccess');
                                    messenger.addMessage('success', el.data('success-message'), {'hashNavEnabled': Navigation.isEnabled()});
                                    widget.loadContent();
                                },
                                error: function () {
                                    if (navigation) {
                                        navigation.loadingMask.hide();
                                    }
                                    messenger.notificationMessage(
                                        'error',
                                        el.data('error-message') || __('Unexpected error occured. Please contact system administrator.')
                                    );
                                }
                            });
                        });
                        confirm.open();
                        return false;
                    });
                });
            });
        });
    </script>
{% endmacro %}
